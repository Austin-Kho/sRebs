# Generated by Django 3.1.5 on 2021-01-16 13:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CashBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_category1', models.CharField(choices=[('1', '입금'), ('2', '출금'), ('3', '대체')], max_length=1, verbose_name='구분')),
                ('cash_category2', models.CharField(blank=True, choices=[('1', '자산'), ('2', '부채'), ('3', '자본'), ('4', '수익'), ('5', '비용'), ('6', '대체')], max_length=1, null=True, verbose_name='계정')),
                ('content', models.CharField(max_length=100, verbose_name='적요')),
                ('trader', models.CharField(blank=True, max_length=30, verbose_name='거래처')),
                ('income', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='입금액')),
                ('outlay', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='출금액')),
                ('evidence', models.CharField(blank=True, choices=[('0', '증빙 없음'), ('1', '세금계산서'), ('2', '계산서(면세)'), ('3', '신용카드전표'), ('4', '현금영수증'), ('5', '간이영수증')], default='0', max_length=1, verbose_name='증빙 자료')),
                ('note', models.CharField(blank=True, default='', max_length=255, verbose_name='비고')),
                ('deal_date', models.DateField(verbose_name='거래일자')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '02. 본사 입출금거래',
                'verbose_name_plural': '02. 본사 입출금거래',
                'ordering': ['-deal_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='CompanyBankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_name', models.CharField(max_length=20, verbose_name='계좌별칭')),
                ('number', models.CharField(blank=True, max_length=30, verbose_name='계좌번호')),
                ('holder', models.CharField(blank=True, max_length=20, verbose_name='예금주')),
                ('open_date', models.DateField(blank=True, null=True, verbose_name='개설일자')),
                ('note', models.CharField(blank=True, max_length=50, verbose_name='비고')),
                ('inactive', models.BooleanField(default=False, verbose_name='비활성 여부')),
            ],
            options={
                'verbose_name': '01. 본사 관리계좌',
                'verbose_name_plural': '01. 본사 관리계좌',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InstallmentPaymentAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_amount', models.PositiveIntegerField(verbose_name='회차별 납부금액')),
            ],
            options={
                'verbose_name': '07. 회차별 납부금액 관리',
                'verbose_name_plural': '07. 회차별 납부금액 관리',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='InstallmentPaymentOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_sort', models.CharField(choices=[('1', '계약금'), ('2', '중도금'), ('3', '잔금')], max_length=1, verbose_name='종류')),
                ('pay_code', models.PositiveSmallIntegerField(help_text='프로젝트 내에서 모든 납부회차를 고유 순서대로 숫자로 부여한다.', verbose_name='납입회차 코드')),
                ('pay_time', models.PositiveSmallIntegerField(help_text='동일 납부회차에 2가지 항목을 별도로 납부하여야 하는 경우(ex: 분담금 + 업무대행료) 하나의 납입회차 코드(ex: 1)에 2개의 납부순서(ex: 1, 2)를 등록한다.', verbose_name='납부순서')),
                ('pay_name', models.CharField(max_length=20, verbose_name='납부회차 명')),
                ('alias_name', models.CharField(blank=True, default='', max_length=20, verbose_name='별칭 이름')),
                ('is_pm_cost', models.BooleanField(default=False, verbose_name='PM용역비 여부')),
                ('pay_due_date', models.DateField(blank=True, null=True, verbose_name='납부기한일')),
            ],
            options={
                'verbose_name': '06. 납입회차 관리',
                'verbose_name_plural': '06. 납입회차 관리',
                'ordering': ['-project', 'pay_code'],
            },
        ),
        migrations.CreateModel(
            name='ProjectBankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_name', models.CharField(max_length=20, verbose_name='계좌별칭')),
                ('number', models.CharField(blank=True, max_length=30, verbose_name='계좌번호')),
                ('holder', models.CharField(blank=True, max_length=20, verbose_name='예금주')),
                ('open_date', models.DateField(blank=True, null=True, verbose_name='개설일자')),
                ('note', models.CharField(blank=True, max_length=50, verbose_name='비고')),
                ('inactive', models.BooleanField(default=False, verbose_name='비활성 여부')),
                ('directpay', models.BooleanField(default=False, verbose_name='용역비 직불 여부')),
            ],
            options={
                'verbose_name': '03. 프로젝트 관리계좌',
                'verbose_name_plural': '03. 프로젝트 관리계좌',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProjectCashBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_category1', models.CharField(choices=[('1', '입금'), ('2', '출금'), ('3', '대체')], max_length=1, verbose_name='구분')),
                ('is_record_separate', models.BooleanField(default=False, help_text='각기 다른 계정 항목이 1회에 같이 입/출금된 경우 이 항목을 체크', verbose_name='상세 분리기록 등록')),
                ('is_contract_payment', models.BooleanField(default=False, verbose_name='분양/분담금 여부')),
                ('content', models.CharField(blank=True, default='', max_length=100, verbose_name='적요')),
                ('trader', models.CharField(blank=True, default='', help_text='분양대금(분담금)일 경우 반드시 해당 계좌에 기재된 입금자를 기재', max_length=30, verbose_name='거래처')),
                ('income', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='입금액')),
                ('outlay', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='출금액')),
                ('evidence', models.CharField(choices=[('0', '증빙 없음'), ('1', '세금계산서'), ('2', '계산서(면세)'), ('3', '신용카드전표'), ('4', '현금영수증'), ('5', '간이영수증')], default='0', max_length=1, verbose_name='증빙 자료')),
                ('note', models.TextField(blank=True, default='', verbose_name='비고')),
                ('deal_date', models.DateField(verbose_name='거래일자')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '04. 프로젝트 입출금거래',
                'verbose_name_plural': '04. 프로젝트 입출금거래',
                'ordering': ['-deal_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='SalesPriceByGT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(null=True, verbose_name='분양가격')),
            ],
            options={
                'verbose_name': '05. 프로젝트 분양가 관리',
                'verbose_name_plural': '05. 프로젝트 분양가 관리',
                'ordering': ('order_group', 'unit_type', 'unit_floor_type', 'project'),
            },
        ),
    ]
